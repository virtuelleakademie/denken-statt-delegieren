---
title: "How We Build Expertise"
subtitle: "Why AI Can't Replace the Learning Journey"
---

## What You Just Experienced {.transition}

### Your Three Research Modes:

:::: {.columns}
::: {.column width="30%"}
**Mode 1: Without AI**  
*Classical sources, prior knowledge*

**Likely felt:** Slower, more effortful, uncertain
:::

::: {.column width="30%"}
**Mode 2: Single AI Prompt**  
*One well-crafted question*

**Likely felt:** Fast, confident, comprehensive
:::

::: {.column width="30%"}
**Mode 3: Collaborative AI**  
*Iterative, follow-up questions*

**Likely felt:** Engaging, interactive, refined
:::
::::



::: {.callout-important}
### The Critical Question:
**Which mode will you remember a week from now?** 

*The immediate "feel" doesn't predict long-term learning...*
:::

---

## From 15 Minutes to 15 Weeks

### Why Short-Term Experience Misleads:

::: {.incremental}
- **Your exercise (15 minutes)**: Different modes *felt* different
- **Real learning (15 weeks)**: Repeated practice literally rewires your brain
- **The gap**: What feels efficient now may prevent expertise later
- **The illusion**: AI collaboration felt engaging, but did it build lasting knowledge?
:::

. . .

::: {.callout-warning}
**Key insight**: We optimize for immediate comfort, not long-term capability.
:::

---

## When Collaborative AI Helps vs. Hurts

### The Nuanced Reality:

::: {.columns}
::: {.column width="45%"}
### ‚úÖ Collaborative AI Can Help When:
- **Clarifying your thinking**: "Does my logic make sense?"
- **Overcoming specific obstacles**: "I'm stuck on this one step"
- **Checking understanding**: "Is my interpretation correct?"
- **Reducing irrelevant load**: Grammar, formatting, citations

*You maintain cognitive control*
:::

::: {.column width="10%"}
:::

::: {.column width="45%"}
### ‚ùå Collaborative AI Hurts When:
- **Generating core ideas**: "What should I think about this?"
- **Doing the reasoning**: "How should I solve this?"
- **Making connections**: "How does this relate to...?"
- **Replacing struggle**: "This is hard, help me"

*AI drives the cognitive process*
:::
:::

. . .

**The test**: Are you using AI to *enhance* your thinking or *replace* it?

## Why Schools Exist: The Knowledge Divide

::: {.columns}
::: {.column width="45%"}
### üß¨ Biologically Primary
**We evolved to learn:**

- Speaking & understanding
- Recognizing faces  
- Reading social cues
- Basic problem solving

*Natural discovery works!*
:::

::: {.column width="10%"}
:::

::: {.column width="45%"}
### üéì Biologically Secondary  
**We didn't evolve to learn:**

- Reading & writing
- Mathematics & algebra
- Programming & analysis
- Scientific reasoning

*Needs explicit teaching!*
:::
:::

. . .

::: {.callout-important}
**AI assumes all knowledge is primary‚Äîbut academic skills need structured struggle.**
:::

---

## The Learning Journey: Novice ‚Üí Expert

```{mermaid}
graph LR
    A[üò∞ Novice<br/>Struggle & Errors] --> B[ü§î Intermediate<br/>Patterns Emerge]
    B --> C[üéØ Expert<br/>Automatic & Fast]
    
    style A fill:#ff6b6b,stroke:#333,stroke-width:3px
    style B fill:#ffe66d,stroke:#333,stroke-width:3px
    style C fill:#4ecdc4,stroke:#333,stroke-width:3px
```

::: {.incremental}
- **Novice**: Step-by-step conscious reasoning (high effort)
- **Intermediate**: Chunking patterns, some automation (moderate effort)  
- **Expert**: Instant recognition, can't explain! (low effort)
:::

. . .

**Key insight**: The struggle *creates* the expertise‚Äîyou can't skip it!

---

## ACT-R Theory: How Minds Actually Work

### Two Memory Systems Working Together:

::: {.columns}
::: {.column width="45%"}
### üß† Declarative Memory
**"Knowing That"**

- **Chunks**: ~3 pieces of info bound together
- Facts: "Paris is capital of France"
- Rules: "To isolate x, subtract from both sides"
- **Like a network**: Connected nodes we search through

*Slow, conscious retrieval*
:::

::: {.column width="10%"}
:::

::: {.column width="45%"}
### ‚ö° Procedural Memory
**"Knowing How"**

- **Productions**: IF-THEN atomic thinking steps
- "IF see ax = b THEN rewrite as x = b/a"
- **Modular**: Each learned independently
- **Compete**: Strongest production wins

*Fast, effortless performance*
:::
:::

. . .

**The learning journey**: Chunks ‚Üí Practice ‚Üí Productions ‚Üí Expertise

---

## Productions: Your Brain's IF-THEN Rules

**Productions are the "atomic thinking steps" of problem-solving:**

::: {.incremental}
- **IF** my goal is to solve for x, **AND** I see equation 3x + 5 = 20, **THEN** subtract 5 from both sides
- **IF** I'm stuck on a programming bug, **AND** code won't compile, **THEN** check syntax first  
- **IF** I need to remember a phone number, **AND** can't write it down, **THEN** repeat it internally
:::

. . .

::: {.callout-note}
## Production Competition in Action

When you see **3x + 5 = 20**, multiple productions compete:

- Production A: "Guess and check values" (weak, novice)
- Production B: "Subtract 5 from both sides" (strong, practiced)
- **Winner**: Strongest production fires automatically

**Practice strengthens winning productions!**
:::

---

## Why Transfer Is So Limited

### Scott Young's Key Insight:

::: {.columns}
::: {.column width="60%"}
**Transfer only occurs when skills share productions**

- Chess strategy ‚â† Business strategy (no shared productions)
- Algebra ‚â† Geometry (few shared productions)  
- Python ‚â† JavaScript (some shared algorithmic thinking)

**The data confirms**: Transfer is linear in number of shared productions!
:::

::: {.column width="40%"}
**Why school feels "useless":**

- You learn 50% of needed productions
- Can't solve real problems (missing key steps)
- **BUT** learning the other 50% is now twice as fast!

*School creates learning potential, not immediate performance*
:::
:::

---

## Knowledge Compilation in Action

**How "atomic thinking steps" become automatic procedures:**

```{mermaid}
graph LR
    A[üìö Declarative Chunks<br/>"ax = b means divide<br/>both sides by a"] --> B[üîÑ Practice<br/>Apply rule in<br/>many problems]
    B --> C[‚ö° Production Rule<br/>"IF see ax = b<br/>THEN answer x = b/a"]
    
    style A fill:#ffe66d,stroke:#333,stroke-width:2px
    style B fill:#ffb3ba,stroke:#333,stroke-width:2px
    style C fill:#4ecdc4,stroke:#333,stroke-width:2px
```

::: {.incremental}
1. **Start**: Hold rule consciously in working memory (slow, effortful)
2. **Practice**: Each successful use strengthens the production
3. **Competition**: Stronger productions win over weaker alternatives  
4. **Compilation**: Direct pattern‚Üíresponse connection forms
5. **Result**: Automatic "atomic thinking step" (fast, effortless)
:::

. . .

**AI provides step 5 without steps 1-4!**

---

## Why Some Things Are Easy, Others Hard

### Procedural Memory Examples You Know:

::: {.incremental}
- **Alphabet forward**: Automatic procedural memory ‚Üí Easy!
- **Alphabet backward**: Must use declarative memory ‚Üí Hard!
  - Recite forward ‚Üí Hold in working memory ‚Üí Manually reverse ‚Üí Say result

- **Typing your name**: Procedural muscle memory ‚Üí Effortless
- **Spelling your name aloud**: Declarative retrieval ‚Üí Requires thought

- **Phone number repetition**: Rehearsal keeps chunks active in declarative memory
- **Phone number from memory**: If practiced enough, becomes procedural
:::

. . .

::: {.callout-important}
**Key insight**: The **same information** accessed through different memory systems feels completely different to perform!
:::

---

## The Working Memory Bottleneck

::: {.columns}
::: {.column width="30%"}
### üò∞ Novice Problem:
**(x + 3)(x - 2) = 0**

**7+ pieces to track:**
- What is x?
- Parentheses meaning?
- Operations involved?
- Why equals zero?
- How to solve?

**üß†üí• Overload!**
:::

::: {.column width="30%"}
### üéØ Expert Problem:
**(x + 3)(x - 2) = 0**

**1 pattern recognized:**
- "Factored form ‚Üí x = -3 or x = 2"

**üß†‚úì Easy!**
:::

::: {.column width="30%"}
### ü§ñ AI Problem:
**(x + 3)(x - 2) = 0**

**0 processing:**
- Copy ‚Üí Paste ‚Üí Answer

**üß†‚ùå No learning!**
:::
:::

---

## How the Brain Actually Learns

### The Prediction Error System:

::: {.incremental}
1. **Brain predicts**: "If I try this approach, it should work"
2. **Reality check**: "Did it work as expected?"
3. **Prediction error**: Gap between expected and actual
4. **Neural update**: Brain adjusts based on the error
:::

. . .

::: {.callout-warning}
## AI Eliminates Learning Signals
- **No predictions** (AI provides instant answers)
- **No attempts** (students don't try solutions)  
- **No errors** (AI is always "correct")
- **No learning** (brain has nothing to update)
:::

---

## The Expertise Illusion

::: {.columns}
::: {.column width="45%"}
### ‚ùå What AI Creates:
- Perfect answers without understanding
- Surface fluency, fragile knowledge
- False confidence in abilities
- Complete dependency on tools
:::

::: {.column width="10%"}
:::

::: {.column width="45%"}
### ‚úÖ What Real Learning Creates:
- Deep understanding through struggle
- Robust knowledge that transfers
- Accurate self-assessment
- True intellectual autonomy
:::
:::

. . .

**The dangerous mistake**: Confusing AI's performance with your own learning.

---

## The Research Reality Check

Recent studies reveal alarming trends:

::: {.incremental}
- **68% reduction in critical thinking** among high AI users
- **Surface learning only** in programming students using ChatGPT  
- **Flynn Effect reversal**: IQ scores declining since we stopped memorizing
- Students can't solve basic problems without AI assistance
:::

. . .

::: {.callout-warning}
We abandoned proven learning methods just as neuroscience proved why they work!
:::

---

## The Two Paths Forward

```{mermaid}
graph TD
    A[Learning Challenge] --> B{Your Choice}
    B -->|AI Shortcut| C[üèÉ‚Äç‚ôÇÔ∏è Fast Answer]
    B -->|Learning Path| D[üßó‚Äç‚ôÄÔ∏è Productive Struggle]
    C --> E[‚ùå Dependency & Fragility]
    D --> F[‚úÖ Expertise & Transfer]
    
    style C fill:#ff6b6b,stroke:#333,stroke-width:2px
    style E fill:#ff6b6b,stroke:#333,stroke-width:2px
    style D fill:#4ecdc4,stroke:#333,stroke-width:2px
    style F fill:#4ecdc4,stroke:#333,stroke-width:2px
```

---

## Practical Guidelines: Beyond the Exercise

::: {.callout-tip}
## Scaling Up From 5 to 20 Minutes

**Your exercise**: 5-minute sessions showed immediate differences in *experience*

**Real learning**: 20+ minutes of struggle creates the *brain changes* that build expertise

### Before Any AI Consultation:
1. **Minimum 20 minutes** of independent attempt (not the 5 from exercise!)
2. **Document your thinking**: What you tried and why
3. **Identify specific obstacles**: Where exactly are you stuck?
4. **Then use AI strategically**: To overcome obstacles, not replace thinking
:::

. . .

**Red flag test**: If you can't solve similar problems without AI after 5 attempts, you're building dependency, not expertise.

---

## Designing Learning Environments for Growth

### The Cultural Shift Required:

::: {.columns}
::: {.column width="45%"}
### ‚ùå Product-Focused Culture
- "Get the right answer quickly"
- Struggle = failure or incompetence  
- Errors are problems to hide
- Speed and efficiency valued
- AI use = being "smart"
:::

::: {.column width="10%"}
:::

::: {.column width="45%"}
### ‚úÖ Process-Focused Culture
- "Show me your thinking"
- Struggle = growth in progress
- Errors are learning opportunities
- Depth and understanding valued
- AI use = strategic choice
:::
:::

. . .

::: {.callout-important}
**Key insight**: Students avoid struggle when environments punish confusion and reward quick answers.
:::

---

## Creating Struggle-Positive Classrooms

### What This Looks Like in Practice:

::: {.incremental}
- **Celebrate productive confusion**: "That's a great question‚Äîyou're thinking deeply!"
- **Assess process, not just products**: Grade thinking steps, not just final answers
- **Share expert struggles**: Show how professionals work through problems messily
- **Time for thinking**: Built-in struggle time before any external help
- **Model uncertainty**: Teachers saying "I'm not sure, let me think..."
:::

. . .

::: {.callout-tip}
## The Environment Test
Students should feel **safe to be confused** and **proud of their thinking process**, not just their final answers.
:::

---

## What This Means for Teaching

::: {.columns}
::: {.column width="50%"}
### ‚ùå Don't:
- Allow immediate AI consultation
- Accept AI-generated work as learning
- Skip the "struggling" phase  
- Treat all students as experts

### ‚úÖ Do:
- Protect struggle time
- Teach process, not just content
- Scaffold complexity appropriately
- Celebrate productive confusion
:::

::: {.column width="50%"}
### The Goal:
Students who say:

*"I could use AI, but then I wouldn't learn anything. Let me try this myself first."*

**This is the future**: Learners who choose growth over shortcuts.
:::
:::

---

## Your Takeaway Challenge

::: {.callout-important}
## The Expertise Question

For your next learning challenge, ask yourself:

**"Am I using this tool to enhance my thinking or replace it?"**

Choose tools that make you **think harder**, not **think less**.
:::

. . .

**Remember**: Your confusion isn't a bug‚Äîit's the feature that builds expertise!

---

## Questions & Discussion

*How might we redesign learning experiences to embrace productive struggle while leveraging AI appropriately?*